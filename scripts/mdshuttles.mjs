import { writeFileSync } from 'fs';
import { L, loadJson, mapDifficulty, formatRewardList } from './utils.mjs';

function generateShuttlesMarkdown() {
	const shuttles = loadJson('GSShuttlecraft');
    const missions = loadJson('GSMissions');
    const episodes = loadJson('GSEpisodes');

	let content = `---
title: 'Shuttlecrafts'
date: '${new Date().toISOString()}'
author: 'AutoGenerated'
---

`;

	Object.values(shuttles).forEach((shuttle) => {
        let unlockMission = missions[`${shuttle.m_UnlockMission.id}-${shuttle.m_UnlockMission.difficulty}`];
        let unlockEpisode = episodes[`${unlockMission.EpisodeId}-${shuttle.m_UnlockMission.difficulty}`];

		content += `
### ${L('UI_Shuttlecraft_Mission_Title').replace('{0}', shuttle.m_RouteNumber)} (${L('UI_Mission_Episode_X').replace('{0}', shuttle.m_EpisodeNumber)})
<img src="/assets/MapNode_Image_Shuttle.png" alt="Shuttlecraft" height="24" >
${L(mapDifficulty(shuttle.m_Difficulty))} difficulty

Duration: **${shuttle.m_Duration}**

Unlocks after completing mission ${L(unlockMission.Name)} (episode ${unlockEpisode.OrderIndex} - ${L(unlockEpisode.Name)}) on ${L(mapDifficulty(shuttle.m_UnlockMission.difficulty))} difficulty.

Max jackpot chance power: **${shuttle.m_MaxJackpotChancePower}**

Base rewards: **${formatRewardList(shuttle.m_BaseReward.AllItems)}**

Jackpot rewards: **${formatRewardList(shuttle.m_JackpotReward.AllItems)}**
`;
	});

	writeFileSync(new URL(`../_wiki/shuttles.md`, import.meta.url), content);
}

export { generateShuttlesMarkdown };
