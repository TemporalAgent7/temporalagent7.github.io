import { writeFileSync } from 'fs';
import { L, loadJson } from './utils.mjs';

function generateStatModMarkdown() {
	const rarity = Object.keys(loadJson('GSRarity'));
	const rank = loadJson('GSRank');
	const level = loadJson('GSLevel');

	let content = `---
title: 'Stat Modifiers'
date: '${new Date().toISOString()}'
author: 'AutoGenerated'
---

## Character stat modifiers by rank and rarity

Rank / Rarity  | ${rarity.map(r => L('Common_Rarity_' + r).padEnd(10)).join(' | ')} | Required Tokens
-------------- | ${rarity.map(r => "-".padEnd(10, "-")).join(' | ')} | ---------------
`;

	for (let i = 1; i <= 9; i++) {
		content += `${i.toString().padEnd(14)} | ${rarity.map(r => rank[`${r}_${i}`].HealthModifier.toString().padEnd(10)).join(' | ')} | ${rank[`Common_${i}`].RequiredTokenCount.toString().padEnd(14)}\n`;
	}

	content += `\n## Character stat modifiers by level and rarity`;

	for (let r of rarity) {
		content += `

### ${r}

Level | Experience | Health | Defense | Attack | Tech   | Speed
----- | ---------- | ------ | ------- | ------ | ------ | ------
`;

		for (let i = 1; i <= 99; i++) {
			content += i.toString().padEnd(5) + ' | ';
			content += level[`${r}_${i}`].Experience.toString().padEnd(10) + ' | ';
			content += (Math.floor(level[`${r}_${i}`].HealthModifier * 100) / 100).toString().padEnd(6) + ' | ';
			content += (Math.floor(level[`${r}_${i}`].DefenseModifier * 100) / 100).toString().padEnd(7) + ' | ';
			content += (Math.floor(level[`${r}_${i}`].AttackModifier * 100) / 100).toString().padEnd(6) + ' | ';
			content += (Math.floor(level[`${r}_${i}`].TechModifier * 100) / 100).toString().padEnd(6) + ' | ';
			content += (Math.floor(level[`${r}_${i}`].SpeedModifier * 100) / 100).toString().padEnd(6) + '\n';
		}
	}

    writeFileSync(new URL(`../_wiki/statmod.md`, import.meta.url), content);
}

export { generateStatModMarkdown };
